.product-page {
    display: grid;
    /* 100px 1fr 1fr; means the 2nd and 3rd column will
       take up half the remaining space in the grid
       (they will divide up the remaining space evenly). */
    grid-template-columns: 100px 1fr;
    column-gap: 25px;
}

@media (max-width: 1000px) {
    .product-page {
        grid-template-columns: 100px 1fr;
        row-gap: 30px;
    }
}

.product-image {
    max-width: 100%;
    max-height: 120px;

    /* margin-left: auto;
       margin-right auto;
       Is a trick for centering an element horizontally
       without needing a container. */
    margin-left: auto;
    margin-right: auto;
}

.product-name {
    font-weight: 700;
    margin-bottom: 8px;
}

.product-price {
    color: rgb(177, 39, 4);
    font-weight: 700;
    margin-bottom: 5px;
}

.product-quantity .link-primary {
    margin-left: 3px;
}

.product-page {
    max-width: 1100px;
    padding-left: 30px;
    padding-right: 30px;

    margin-top: 140px;
    margin-bottom: 100px;

    /* margin-left: auto;
       margin-right auto;
       Is a trick for centering an element horizontally
       without needing a container. */
    margin-left: auto;
    margin-right: auto;
}

.product-page__product {
    display: grid;
    /* Here, 1fr means the first column will take
       up the remaining space in the grid. */
    grid-template-columns: 1fr 350px;
    column-gap: 12px;

    /* Use align-items: start; to prevent the elements
       in the grid from stretching vertically. */
    align-items: start;
}